---
- name: "module_os_user_group"
  hosts: all
  # hosts: localhost, Define the --limit localhost.
  # connection: Define the variable ansible_connection in the inventory
  # become: Define the variable ansible_become in the inventory
  # gather_facts: Define the variable ansible_gather_facts in the inventory
  vars:
    os_user_group: 
      auth_type: "{{ os_user_group_auth_type | default(omit, True) }}"
      timeout: "{{ os_user_group_timeout | default(omit, True) }}"
      group: "{{ os_user_group_group | default(omit, True) }}"
      region_name: "{{ os_user_group_region_name | default(omit, True) }}"
      availability_zone: "{{ os_user_group_availability_zone | default(omit, True) }}"
      verify: "{{ os_user_group_verify | default(omit, True) }}"
      api_timeout: "{{ os_user_group_api_timeout | default(omit, True) }}"
      state: "{{ os_user_group_state | default(omit, True) }}"
      auth: "{{ os_user_group_auth | default(omit, True) }}"
      cacert: "{{ os_user_group_cacert | default(omit, True) }}"
      cert: "{{ os_user_group_cert | default(omit, True) }}"
      user: "{{ os_user_group_user | default(omit, True) }}"
      key: "{{ os_user_group_key | default(omit, True) }}"
      interface: "{{ os_user_group_interface | default(omit, True) }}"
      cloud: "{{ os_user_group_cloud | default(omit, True) }}"
      wait: "{{ os_user_group_wait | default(omit, True) }}"
  tasks:
    - name: "plugin_os_user_group"
      os_user_group: "{{ os_user_group }}"
      register: r_os_user_group

    - name: "export r_os_user_group"
      set_stats:
        data:
          r_os_user_group: "{{ r_os_user_group }}"
