---
- name: "module_cloudfront_invalidation"
  hosts: all
  # hosts: localhost, Define the --limit localhost.
  # connection: Define the variable ansible_connection in the inventory
  # become: Define the variable ansible_become in the inventory
  # gather_facts: Define the variable ansible_gather_facts in the inventory
  vars:
    cloudfront_invalidation: 
      profile: "{{ cloudfront_invalidation_profile | default(omit, True) }}"
      aws_secret_key: "{{ cloudfront_invalidation_aws_secret_key | default(omit, True) }}"
      aws_access_key: "{{ cloudfront_invalidation_aws_access_key | default(omit, True) }}"
      security_token: "{{ cloudfront_invalidation_security_token | default(omit, True) }}"
      alias: "{{ cloudfront_invalidation_alias | default(omit, True) }}"
      region: "{{ cloudfront_invalidation_region | default(omit, True) }}"
      caller_reference: "{{ cloudfront_invalidation_caller_reference | default(omit, True) }}"
      debug_botocore_endpoint_logs: "{{ cloudfront_invalidation_debug_botocore_endpoint_logs | default(omit, True) }}"
      target_paths: "{{ cloudfront_invalidation_target_paths | default(omit, True) }}"
      distribution_id: "{{ cloudfront_invalidation_distribution_id | default(omit, True) }}"
      ec2_url: "{{ cloudfront_invalidation_ec2_url | default(omit, True) }}"
      validate_certs: "{{ cloudfront_invalidation_validate_certs | default(omit, True) }}"
  tasks:
    - name: "plugin_cloudfront_invalidation"
      cloudfront_invalidation: "{{ cloudfront_invalidation }}"
      register: r_cloudfront_invalidation

    - name: "export r_cloudfront_invalidation"
      set_stats:
        data:
          r_cloudfront_invalidation: "{{ r_cloudfront_invalidation }}"
