---
- name: "module_aws_application_scaling_policy"
  hosts: all
  # hosts: localhost, Define the --limit localhost.
  # connection: Define the variable ansible_connection in the inventory
  # become: Define the variable ansible_become in the inventory
  # gather_facts: Define the variable ansible_gather_facts in the inventory
  vars:
    aws_application_scaling_policy: 
      profile: "{{ aws_application_scaling_policy_profile | default(omit, True) }}"
      aws_secret_key: "{{ aws_application_scaling_policy_aws_secret_key | default(omit, True) }}"
      aws_access_key: "{{ aws_application_scaling_policy_aws_access_key | default(omit, True) }}"
      policy_type: "{{ aws_application_scaling_policy_policy_type | default(omit, True) }}"
      scalable_dimension: "{{ aws_application_scaling_policy_scalable_dimension | default(omit, True) }}"
      security_token: "{{ aws_application_scaling_policy_security_token | default(omit, True) }}"
      resource_id: "{{ aws_application_scaling_policy_resource_id | default(omit, True) }}"
      validate_certs: "{{ aws_application_scaling_policy_validate_certs | default(omit, True) }}"
      region: "{{ aws_application_scaling_policy_region | default(omit, True) }}"
      target_tracking_scaling_policy_configuration: "{{ aws_application_scaling_policy_target_tracking_scaling_policy_configuration | default(omit, True) }}"
      step_scaling_policy_configuration: "{{ aws_application_scaling_policy_step_scaling_policy_configuration | default(omit, True) }}"
      minimum_tasks: "{{ aws_application_scaling_policy_minimum_tasks | default(omit, True) }}"
      ec2_url: "{{ aws_application_scaling_policy_ec2_url | default(omit, True) }}"
      service_namespace: "{{ aws_application_scaling_policy_service_namespace | default(omit, True) }}"
      override_task_capacity: "{{ aws_application_scaling_policy_override_task_capacity | default(omit, True) }}"
      policy_name: "{{ aws_application_scaling_policy_policy_name | default(omit, True) }}"
      maximum_tasks: "{{ aws_application_scaling_policy_maximum_tasks | default(omit, True) }}"
  tasks:
    - name: "plugin_aws_application_scaling_policy"
      aws_application_scaling_policy: "{{ aws_application_scaling_policy }}"
      register: r_aws_application_scaling_policy

    - name: "export r_aws_application_scaling_policy"
      set_stats:
        data:
          r_aws_application_scaling_policy: "{{ r_aws_application_scaling_policy }}"
