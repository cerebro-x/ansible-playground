---
- name: "module_vr_firewall_rule"
  hosts: all
  # hosts: localhost, Define the --limit localhost.
  # connection: Define the variable ansible_connection in the inventory
  # become: Define the variable ansible_become in the inventory
  # gather_facts: Define the variable ansible_gather_facts in the inventory
  vars:
    vr_firewall_rule: 
      api_timeout: "{{ vr_firewall_rule_api_timeout | default(omit, True) }}"
      start_port: "{{ vr_firewall_rule_start_port | default(omit, True) }}"
      end_port: "{{ vr_firewall_rule_end_port | default(omit, True) }}"
      protocol: "{{ vr_firewall_rule_protocol | default(omit, True) }}"
      group: "{{ vr_firewall_rule_group | default(omit, True) }}"
      api_endpoint: "{{ vr_firewall_rule_api_endpoint | default(omit, True) }}"
      state: "{{ vr_firewall_rule_state | default(omit, True) }}"
      api_account: "{{ vr_firewall_rule_api_account | default(omit, True) }}"
      ip_version: "{{ vr_firewall_rule_ip_version | default(omit, True) }}"
      api_retries: "{{ vr_firewall_rule_api_retries | default(omit, True) }}"
      cidr: "{{ vr_firewall_rule_cidr | default(omit, True) }}"
      api_key: "{{ vr_firewall_rule_api_key | default(omit, True) }}"
      validate_certs: "{{ vr_firewall_rule_validate_certs | default(omit, True) }}"
  tasks:
    - name: "plugin_vr_firewall_rule"
      vr_firewall_rule: "{{ vr_firewall_rule }}"
      register: r_vr_firewall_rule

    - name: "export r_vr_firewall_rule"
      set_stats:
        data:
          r_vr_firewall_rule: "{{ r_vr_firewall_rule }}"
